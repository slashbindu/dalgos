/*
Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.

Input: s = "(()"
Output: 2

Input: s = ")()())"
Output: 4

Input: s = ""
Output: 0
*/
using namespace std;

class Solution {
public:
    int longestValidParentheses(string s) {
        
        stack<int> stk;
        
        int i = 0; int n = s.size();
        int len = 0;
        int maxlen = 0;
        stk.push(-1);
        while (i < n) {
            
            string curr = s.substr(i, 1);
            if(curr == "(") {
                stk.push(i);
                
            } else{
                int t;
                stk.pop();
                if(!stk.size()) {
                    stk.push(i);
                } else {
                    t = stk.top();
                    len = i-t;
                    maxlen = max(maxlen, len);
                }
                  
           }
            i++;
        }
        return maxlen;
               
    }
};
