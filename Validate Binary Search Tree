/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//  left root right 
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        
        vector<int> inorder;
        stack<TreeNode*> dfs;
        
        if(root == NULL)
            return inorder;
        
        TreeNode* curr = root;
        
        while(curr || dfs.size()) {
                        
            while(curr ) {
                dfs.push(curr);
                curr = curr->left;
            }
            
            //visit root
            curr = dfs.top();
            inorder.push_back(curr->val);
            dfs.pop();
            
            //visit right
            curr = curr->right;
                        
        }
        return inorder;
    }
};
